makeCacheMatrix<-function(x=matrix()){
+ inv<-NULL
+ set<-function(y){
+ x<<-y
+ inv<<-NULL
+ }
+ get<-function()x
+ Sinverse<-function(inverse)inv<<-inverse
+ Ginverse<-function()inv
+ list(set=set,
+ get=get,
+ Sinverse=Sinverse,
+ Ginverse=Ginverse)
+ }

Joaomatrix<-matrix(1:4,2,2)
print(Joaomatrix)
momentoftruth<-makeCacheMatrix(Joaomatrix)
momentoftruth$Ginverse()


cacheSolve<-function(x,...){
+ inv<-x$Ginverse()
+ if(!is.null(inv)){
+ message("getting cached data")
+ return(inv)
+ }
+ mt<-x$get()
+ inv<-solve(mt,...)
+ x$Sinverse(inv)
+ inv
+ }

cacheSolve(momentoftruth)

momentoftruth$Ginverse()
